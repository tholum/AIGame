/*! obs 0.11.2 Original author Alan Plum <me@pluma.io>. Released into the Public Domain under the UNLICENSE. @preserve */
(function(t){var r=function(r){return t[r]},e={};var n=r("sublish").PubSub,i=Array.prototype.slice,u=Array.isArray?Array.isArray:function(t){return Object.prototype.toString.call(t)==="[object Array]"},o=Array.prototype.indexOf?function(t,r){return!!~t.indexOf(r)}:function(t,r){for(var e=0;e<t.length;e++){if(t[e]===r){return true}}return false};function a(t){var r=i.call(arguments,1);for(var e=0;e<r.length;e++){var n=r[e];for(var u in n){if(n.hasOwnProperty(u)){t[u]=n[u]}}}return t}function c(t){var r=t[0];if(typeof r==="function"){r={compute:t[0]};if(t.length>1){if(typeof t[1]==="function"){r.write=t[1];if(t.length>2){r.watch=t[2]}}else{r.watch=t[1]}}}return r}function s(t){function r(t){if(arguments.length){if(typeof r.write==="function"){r.write.call(r.context,t)}else{throw new Error("This observable cannot be written to!")}}else{if(typeof r.read==="function"){return r.read.call(r.context)}else{throw new Error("This observable cannot be read from!")}}}a(r,n.prototype,{context:t.context||r,read:t.read,write:t.write,onNotify:function(t){return function(){t.call(r)}}(t.onNotify||function(){}),_initialValue:t.value,_currentValue:t.value,_previousValue:undefined,_subscriptions:[]},s.fn);n.apply(r);if(t.watch){r.watch.apply(r,u(t.watch)?t.watch:[t.watch])}return r}s.fn={__is_obs__:true,notify:function(){this.dirty=this._currentValue===this._initialValue;this.publish(this._currentValue,this._previousValue)},peek:function(){return this._currentValue},commit:function(){this._initialValue=this._currentValue;this.dirty=false},reset:function(){this._previousValue=this._currentValue;this._currentValue=this._initialValue;this.notify()},watch:function(){var t=i.call(arguments,0),r,e;for(e=0;e<t.length;e++){r=t[e];if(o(this._subscriptions,r)){continue}if(r&&typeof r.subscribe==="function"){r.subscribe(this.onNotify);this._subscriptions.push(r)}}return this},unwatch:function(){var t=i.call(arguments,0),r=this._subscriptions,e,n;for(e=0;e<t.length;e++){n=t[e];if(n&&typeof n.unsubscribe==="function"){n.unsubscribe(this.onNotify)}}this._subscriptions=[];for(e=0;e<r.length;e++){n=r[e];if(!o(t,n)){this._subscriptions.push(n)}}return this},dismiss:function(){this.unwatch.apply(this,this._subscriptions)}};s.prop=function(t){return s({read:function(){return this._currentValue},write:function(t){this._previousValue=this._currentValue;this._currentValue=t;this.notify()},value:t})};s.computed=function(t){t=c(arguments);var r=s(a({},t,{read:function(){return r._currentValue},onNotify:function(){this._previousValue=this._currentValue;this._currentValue=t.compute.call(this.context);this.notify()}}));if(t.compute){r._initialValue=t.compute.call(r.context);r._currentValue=r._initialValue}if(t.watch){r.watch.apply(r,u(t.watch)?t.watch:[t.watch])}return r};s.computed.lazy=function(t){t=c(arguments);var r=true;var e=s(a({},t,{context:t.context,read:function(){if(r){r=false;e._previousValue=e._currentValue;e._currentValue=t.compute.call(this);e.notify()}return e._currentValue},write:t.write,onNotify:function(){r=true},watch:t.watch}));return e};e.exports=s;t.obs=e.exports})(this);