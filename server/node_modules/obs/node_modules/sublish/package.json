{
  "name": "sublish",
  "version": "0.4.6",
  "author": {
    "name": "Alan Plum",
    "email": "me@pluma.io"
  },
  "description": "Minimalist publish/subscribe.",
  "licenses": {
    "type": "UNLICENSE",
    "url": "https://github.com/pluma/sublish/blob/master/UNLICENSE"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pluma/sublish.git"
  },
  "keywords": [
    "pubsub",
    "publish",
    "subscribe",
    "events"
  ],
  "dependencies": {},
  "devDependencies": {
    "mocha": "~1.17",
    "expect.js": "~0.3",
    "uglify-js": "~2.4",
    "jshint": "~2.4",
    "istanbul": "~0.2",
    "coveralls": "~2.8"
  },
  "main": "./dist/sublish.js",
  "scripts": {
    "test": "make test",
    "coveralls": "make coveralls"
  },
  "engines": {
    "node": ">=0.6"
  },
  "testling": {
    "files": "spec/*.js",
    "harness": "mocha",
    "browsers": [
      "chrome/latest",
      "chrome/canary",
      "firefox/3.6..4",
      "firefox/latest",
      "firefox/nightly",
      "opera/10",
      "opera/latest",
      "opera/next",
      "safari/4..latest",
      "ie/6..latest"
    ]
  },
  "readme": "# Synopsis\n\n**sublish** is a minimalist lightweight (504 Bytes minified and 297 Bytes gzipped) implementation of publish/subscribe.\n\n[![stability 3 - stable](http://b.repl.ca/v1/stability-3_--_stable-yellowgreen.png)\n](http://nodejs.org/api/documentation.html#documentation_stability_index) [![license - Unlicense](http://b.repl.ca/v1/license-Unlicense-lightgrey.png)](http://unlicense.org/) [![Flattr this](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=pluma&url=https://github.com/pluma/sublish)\n\n[![browser support](https://ci.testling.com/pluma/sublish.png)](https://ci.testling.com/pluma/sublish)\n\n[![Build Status](https://travis-ci.org/pluma/sublish.png?branch=master)](https://travis-ci.org/pluma/sublish) [![Coverage Status](https://coveralls.io/repos/pluma/sublish/badge.png?branch=master)](https://coveralls.io/r/pluma/sublish?branch=master) [![Dependencies](https://david-dm.org/pluma/sublish.png?theme=shields.io)](https://david-dm.org/pluma/sublish)\n\n[![NPM status](https://nodei.co/npm/sublish.png?compact=true)](https://npmjs.org/package/sublish)\n\n# Install\n\n## Node.js\n\n### With NPM\n\n```sh\nnpm install sublish\n```\n\n### From source\n\n```sh\ngit clone https://github.com/pluma/sublish.git\ncd sublish\nnpm install\nmake && make dist\n```\n\n## Browser\n\n### With component\n\n```sh\ncomponent install pluma/sublish\n```\n\n[Learn more about component](https://github.com/component/component).\n\n### With bower\n\n```sh\nbower install sublish\n```\n\n[Learn more about bower](https://github.com/twitter/bower).\n\n### With a CommonJS module loader\n\nDownload the [latest minified CommonJS release](https://raw.github.com/pluma/sublish/master/dist/sublish.min.js) and add it to your project.\n\n[Learn more about CommonJS modules](http://wiki.commonjs.org/wiki/Modules/1.1).\n\n### With an AMD module loader\n\nDownload the [latest minified AMD release](https://raw.github.com/pluma/sublish/master/dist/sublish.amd.min.js) and add it to your project.\n\n[Learn more about AMD modules](http://requirejs.org/docs/whyamd.html).\n\n### As a standalone library\n\nDownload the [latest minified standalone release](https://raw.github.com/pluma/sublish/master/dist/sublish.globals.min.js) and add it to your project.\n\n```html\n<script src=\"/your/js/path/sublish.globals.min.js\"></script>\n```\n\nThis makes the `sublish` module available in the global namespace.\n\n# Basic usage example\n\n```javascript\nvar myPubSub = new sublish.PubSub();\n\nmyPubSub.subscribe(function(message) {\n  console.log('myPubSub says: \"' + message + '\"');\n});\n\n// elsewhere\nmyPubSub.publish('something amazing');\n// -> 'myPubSub says: \"something amazing\"'\n```\n\n# Mixin usage example with [mixed](https://github.com/pluma/mixed)\n\n```javascript\nfunction Person(name) {\n    this.name = name;\n}\nPerson.prototype = {\n    say: function(message) {\n        this.publish(this.name + ' says: \"' + message + '\"');\n    }\n};\n\nvar joe = new Person('Joe');\nmixed.mixin(sublish.PubSub, joe);\n\njoe.subscribe(function(message) {\n    console.log(message);\n});\n\n// elsewhere\njoe.say('Hello there!');\n// -> 'Joe says: \"Hello there!\"\n```\n\n# API\n\n## new PubSub()\n\nCreates a new PubSub instance.\n\n**NOTE:** This is a constructor. Use of the `new` keyword is therefore not optional.\n\n## PubSub#subscribe(callback:Function)\n\nAdds the given callback function to this object's list of subscribers.\n\n**NOTE**: The callback will be called with the PubSub instance as its context. If you want to preserve the callback's original context, use `Function#bind` or (in legacy browsers) wrap the callback in a closure.\n\n## PubSub#unsubscribe(callback:Function)\n\nRemoves the given callback function from this object's list of subscribers.\n\n## PubSub#publish(argsâ€¦)\n\nPublishes the given arguments as a message. Every callback function in this object's list of subscribers will be called sequentially with the given messages as its arguments.\n\n# Unlicense\n\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/sublish/blob/master/UNLICENSE) file.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pluma/sublish/issues"
  },
  "_id": "sublish@0.4.6",
  "dist": {
    "shasum": "82b88c0016f165a0341f2b5d8297a02af38b6701"
  },
  "_from": "sublish@~0.4",
  "_resolved": "https://registry.npmjs.org/sublish/-/sublish-0.4.6.tgz"
}
